property set HAMR is

--- The <b>Platform</b> property specifies the platform being targeted for code generation.<p>
---
--- <b>JVM</b>
--- <ul>
---   <li><b>JVM</b> produces Slang-embedded code that is runnable from within a JVM
--- </ul>
---
--- <b>JVM/C</b>
--- <ul>
---   <li><b>Linux</b>  transpiles Slang-embedded code generated by the JVM platform down to C that can be run from a Linux environment  
---   <li><b>macOS</b>  transpiles Slang-embedded code generated by the JVM platform down to C that can be run from a macOS environment  
---   <li><b>Cygwin</b> transpiles Slang-embedded code generated by the JVM platform down to C that can be run from a Cygwin environment
--- </ul>
---
--- <b>CAmkES</b>
--- <ul>
---   <li><b>seL4_Only</b> produces CAmkES code using <i>System Build</i> style translations for AADL port connections
---   <li><b>seL4_TB</b>   produces CAmkES code using <i>Trusted Build</i> style translations for AADL port connections
--- </ul>
---
--- <b>JVM/C/CAmkES</b>
--- <ul>
---     <li><b>seL4</b> produces CAmkES code in which component behavior is supplied via Slang-embedded code 
--- </ul>
---
--- <b>Microkit</b>
--- <ul>
---     <li><b>Microkit</b> produced Microkit code
--- </ul>
---
--- <b>ros2</b>
--- <ul>
---     <li><b>ros2</b> produced Ros2 code
--- </ul>
 
  Platform : list of enumeration (JVM, Linux, macOS, Cygwin, seL4, seL4_Only, seL4_TB, Microkit, ros2) applies to (processor, virtual processor, system implementation);
  
  
--- The <b>Default_Bit_Width</b> property specifies the default bit width for unbounded Slang integer types
--- (e.g. Z) when transpiling to C.
  
  Default_Bit_Width : aadlinteger applies to  (processor, virtual processor, system implementation);
  
  
--- The <b>Default_Max_Sequence_Size</b> property specifies the default maximum size for Slang sequence 
--- types (e.g. ISZ) when transpiling to C.
  
  Default_Max_Sequence_Size : aadlinteger applies to (processor, virtual processor, system implementation);
  
  
--- Specifies the kind of array size semantics for an array data type.
--- <ul>
---   <li><b>Fixed</b>: The array always has exactly the number of elements specified in
---   the Data_Model::Dimension property. Both memory allocation and logical
---   content size are fixed.
---
---   <li><b>Bounded</b>: The array may contain fewer elements than specified by
---   Data_Model::Dimension, but never more. The full size may be allocated in
---   memory, but only part of it is considered logically valid.
---
---   <li><b>Unbounded</b>: The array does not have a statically known size limit.
---   If Data_Model::Dimension is provided then all dimensions must be equal to 0. 
---   The array may grow arbitrarily, and size checks must be enforced at runtime.
--- </ul>

  Array_Size_Kind : enumeration (Fixed, Bounded, Unbounded) applies to (data);
  
  
--- The <b>Max_String_Size</b> property specifies the the maximum size for Slang strings
--- when transpiling to C.

  Max_String_Size : aadlinteger applies to (processor, virtual processor, system implementation);


-- experimental properties

--- The <b>HW</b> property specifies hardware being targeted during code generation. 

  HW : list of enumeration (ODROID_XU4, QEMU, x86, amd64) applies to (processor, virtual processor, system implementation);


--- The <b>Bit_Codec_Raw_Connections</b> property specifies whether the wire protocol should
--- be used used for all connections between threads

  Bit_Codec_Raw_Connections : aadlboolean applies to ( system );

--- The <b>Bit_Codec_Max_Size</b> property specifies the size requirements for a data type
--- when using the wire protocol

  Bit_Codec_Max_Size : Size applies to ( connection, data );



--- The <b>Bit_Codec_Spec</b> property specifies the pathname to a data type's bitcodec spec.  
--- <b>NOTE</b> support for this property has not been added to HAMR Codegen
  
  Bit_Codec_Spec : aadlstring applies to ( connection, data );
  
--- The <b>Bit_Codec_Encoded</b> property specifies whether a connection will use the
--- the wire protocol.  
--- <b>NOTE</b> support for this property has not been added to HAMR Codegen

  Bit_Codec_Encoded : aadlboolean applies to ( connection );
  
  
  
--- The <b>Microkit_Language</b> property specifies the target programming language for a component (defaults to C)

  Microkit_Language : inherit enumeration (C, Rust) applies to (system, process, thread);
   
end HAMR;
